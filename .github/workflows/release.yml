name: Nightly Build

on:
  schedule:
    - cron: '0 0 * * *' 
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build project
        run: |
          ./build.sh && ./install.sh
          cd bdump && make release && cp bdump ../bin && cd ..
          cd btils && gcc -o bfmt bfmt.c -static && cp bfmt ../bin && cd ..
          tar -czvf belle.tar.gz bin

      - name: 'Upload BELLE build Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: BELLE-Docker-Image
          path: belle.tar.gz
          retention-days: 3

      - name: Delete Latest Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_ID=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/repos/<owner>/<repo>/releases/latest | \
            jq -r .id)

          if [ -n "$RELEASE_ID" ]; then
            curl -X DELETE -H "Authorization: token $GITHUB_TOKEN" \
              https://api.github.com/repos/<owner>/<repo>/releases/$RELEASE_ID
            echo "Deleted release with ID: $RELEASE_ID"
          else
            echo "No releases found."
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nightly
          body: Nightly release for BELLE
          prerelease: true
          token: ${{ secrets.RELEASE_TOKEN }}
          name: Nightly release
          files: |
            belle.tar.gz
