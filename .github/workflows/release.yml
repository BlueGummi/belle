name: Nightly Build

on:
  schedule:
    - cron: '0 */12 * * *'
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build project for Linux
        run: |
          mkdir bin
          cp -r ./examples ./bin
          mkdir windows-bin
          cp -r ./examples ./bin
          mkdir macos-bin
          cp -r ./examples ./bin
          apt install musl-gcc -y

          export RUSTFLAGS="-C target-feature=+crt-static"
          rustup target add x86_64-unknown-linux-musl

          cd belle && CARGOFLAGS="--profile.release.lto = true" cargo build --target x86_64-unknown-linux-musl --release --features "window"
          cp target/x86_64-unknown-linux-musl/release/belle ../bin && cd ..

          cd basm && CARGOFLAGS="--profile.release.lto = true" cargo build --target x86_64-unknown-linux-musl --release
          cp target/x86_64-unknown-linux-musl/release/basm ../bin && cd ..

          cd bdump && make release && cp bdump ../bin && cd ..

          sudo apt install zip -y
          tar -czvf belle-nightly-linux-x86_64.tar.gz bin
          zip -r belle-nightly-linux-x86_64.zip bin

      - name: Build project for Windows
        run: |
          sudo apt install mingw-w64 -y

          cd bdump && make release CC=x86_64-w64-mingw32-gcc && cp bdump.exe ../windows-bin && cd ..

          rustup target add x86_64-pc-windows-gnu

          cd belle && CARGOFLAGS="--profile.release.lto = true" cargo build --target x86_64-pc-windows-gnu --release --features "window"
          cp target/x86_64-pc-windows-gnu/release/belle.exe ../windows-bin && cd ..

          cd basm && CARGOFLAGS="--profile.release.lto = true" cargo build --target x86_64-pc-windows-gnu --release
          cp target/x86_64-pc-windows-gnu/release/basm.exe ../windows-bin && cd ..

          tar -czvf belle-nightly-windows-x86_64.tar.gz windows-bin
          zip -r belle-nightly-windows-x86_64.zip windows-bin

      - name: Delete release
        run: |
          git config --global user.email "105593618+BlueGummi@users.noreply.github.com"
          git config --global user.name "BlueGummi"
          git config --global url."https://${{ secrets.RELEASE_TOKEN }}@github.com".insteadOf "https://github.com"
          git push --delete origin nightly

      - name: eep
        run: sleep 2s

      - name: Create Release
        uses: softprops/action-gh-release@v2.2.1
        with:
          tag_name: nightly
          body: Nightly release for BELLE
          prerelease: false 
          token: ${{ secrets.RELEASE_TOKEN }}
          name: Nightly release
          draft: false
          files: |
            belle-nightly-linux-x86_64.tar.gz
            belle-nightly-linux-x86_64.zip
            belle-nightly-windows-x86_64.tar.gz
            belle-nightly-windows-x86_64.zip

      - name: eep
        run: sleep 2s
      
      - name: Delete drafts
        uses: hugo19941994/delete-draft-releases@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
