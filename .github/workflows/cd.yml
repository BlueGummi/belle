name: Demo

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker image
      run: |
        docker build -f .Dockerfile -t belle-image .

    - name: Create output directory
      run: mkdir -p output

    - name: Copy files from Docker builds
      run: |
        docker create --name temp-container belle-image
        docker cp temp-container:/app ./output
        docker rm temp-container
        tar -czvf belle.tar.gz output

    - name: 'Upload BELLE build Artifact'
      uses: actions/upload-artifact@v4
      with:
        name: BELLE-Docker-Image
        path: belle.tar.gz
        retention-days: 5

    - name: Set up Git
      run: |
        git config --global url."https://${{ secrets.ACCESS_TOKEN }}@github.com".insteadOf "https://github.com"

    - name: Clone and change BELLE-Demo
      run: |
        git clone https://github.com/bluegummi/belle-demo.git
        cd belle-demo
        rm basm || true
        rm belle || true
        cp -r ../output/app/* ./

    - name: Retrieve last commit message from belle
      id: get_commit_message
      run: |
        LAST_COMMIT_MESSAGE=$(git log -1 --pretty=%B)
        echo "LAST_COMMIT_MESSAGE=${LAST_COMMIT_MESSAGE}" >> $GITHUB_ENV

    - name: Configure Git for commit
      run: |
        git config --global user.email "105593618+BlueGummi@users.noreply.github.com"
        git config --global user.name "BlueGummi"

    - name: Commit and push changes
      run: |
        cd belle-demo || true
        git add * || true
        git commit -m "AUTOCOMMIT - ${{ env.LAST_COMMIT_MESSAGE }}" || true
        git push origin || true
                
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: nightly
        name: Nightly release
        files: belle.tar.gz
